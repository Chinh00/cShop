¸#
\/Users/bachviet/Documents/Personal/dotnet/cShop/src/BuildingBlock/cShop.Core/Domain/Event.cs
	namespace 	
cShop
 
. 
Core 
. 
Domain 
; 
public 
	interface 
IAggregateRoot 
{		 
IReadOnlyCollection

 
<

 
IDomainEvent

 $
>

$ %
DomainEvents

& 2
{

3 4
get

5 8
;

8 9
}

: ;
} 
public 
	interface 
IEvent 
{ 
} 
public 
	interface 
IVersion 
{ 
long 
Version	 
{ 
get 
; 
} 
} 
public 
	interface 
IDomainEvent 
: 
IEvent  &
,& '
IVersion( 0
,0 1
IMessage2 :
{ 
} 
public 
	interface 
IMessage 
{ 
DateTime 
CreateAt 
{ 
get 
; 
} 
}   
public$$ 
abstract$$ 
record$$ 
Message$$ 
:$$  
IMessage$$! )
{%% 
public&& 

DateTime&& 
CreateAt&& 
{&& 
get&& "
;&&" #
}&&$ %
=&&& '
DateTime&&( 0
.&&0 1
UtcNow&&1 7
;&&7 8
}'' 
public** 
abstract** 
class** 
AggregateBase** #
:**$ %

EntityBase**& 0
,**0 1
IAggregateRoot**2 @
{++ 
private,, 
ICollection,, 
<,, 
IDomainEvent,, $
>,,$ %
_events,,& -
;,,- .
public.. 

long.. 
Version.. 
{.. 
get.. 
;.. 
set.. "
;.." #
}..$ %
public00 

AggregateBase00 
(00 
)00 
{11 
_events22 
=22 
new22 
List22 
<22 
IDomainEvent22 '
>22' (
(22( )
)22) *
;22* +
Version33 
=33 
$num33 
;33 
}44 
public66 

void66 

RaiseEvent66 
(66 
Func66 
<66  
long66  $
,66$ %
IDomainEvent66& 2
>662 3
func664 8
)668 9
{77 
_events88 
??=88 
[88 
]88 
;88 
Version99 
++99 
;99 
var:: 
@event:: 
=:: 
func:: 
(:: 
Version:: !
)::! "
;::" #
_events;; 
.;; 
Add;; 
(;; 
@event;; 
);; 
;;; 
}<< 
public>> 

void>> 
ClearEvents>> 
(>> 
)>> 
{?? 
_events@@ 
??=@@ 
[@@ 
]@@ 
;@@ 
VersionAA 
=AA 
$numAA 
;AA 
_eventsBB 
.BB 
ClearBB 
(BB 
)BB 
;BB 
}CC 
publicEE 

voidEE 
ApplyEventsEE 
(EE 
ICollectionEE '
<EE' (
IDomainEventEE( 4
>EE4 5
eventsEE6 <
)EE< =
{FF 
foreachGG 
(GG 
varGG 
domainEventGG  
inGG! #
eventsGG$ *
)GG* +
{HH 	
thisII 
.II 

ApplyEventII 
(II 
domainEventII '
)II' (
;II( )
VersionJJ 
=JJ 
domainEventJJ !
.JJ! "
VersionJJ" )
;JJ) *
}KK 	
}LL 
[MM 

JsonIgnoreMM 
]MM 
publicNN 

IReadOnlyCollectionNN 
<NN 
IDomainEventNN +
>NN+ ,
DomainEventsNN- 9
=>NN: <
_eventsNN= D
.NND E
ToListNNE K
(NNK L
)NNL M
.NNM N

AsReadOnlyNNN X
(NNX Y
)NNY Z
;NNZ [
publicPP 

abstractPP 
voidPP 

ApplyEventPP #
(PP# $
IDomainEventPP$ 0
@eventPP1 7
)PP7 8
;PP8 9
}RR ›
_/Users/bachviet/Documents/Personal/dotnet/cShop/src/BuildingBlock/cShop.Core/Domain/Entities.cs
	namespace 	
cShop
 
. 
Core 
. 
Domain 
; 
public 
class 

EntityBase 
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
=! "
Guid# '
.' (
NewGuid( /
(/ 0
)0 1
;1 2
public 

DateTime 
CreatedDate 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
DateTime0 8
.8 9
UtcNow9 ?
;? @
public		 

DateTime		 
?		 
UpdatedDate		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
}

 
public 
class 
ProjectionBase 
{ 
[ 
BsonId 
] 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
public 

long 
Version 
{ 
get 
; 
set "
;" #
}$ %
} æ
[/Users/bachviet/Documents/Personal/dotnet/cShop/src/BuildingBlock/cShop.Core/Domain/Cqrs.cs
	namespace 	
cShop
 
. 
Core 
. 
Domain 
; 
public 
	interface 
ICommand 
< 
	TResponse #
># $
:% &
IRequest' /
</ 0
ResultModel0 ;
<; <
	TResponse< E
>E F
>F G
{ 
} 
public

 
	interface

 
ICreateCommand

 
<

  
TModel

  &
,

& '
	TResponse

( 1
>

1 2
:

3 4
ICommand

5 =
<

= >
	TResponse

> G
>

G H
{ 
public 

TModel 
Model 
{ 
get 
; 
}  
} 
public 
record 
ResultModel 
< 
TData 
>  
(  !
TData! &
Data' +
,+ ,
bool- 1
IsError2 9
,9 :
string; A
MessageB I
)I J
{ 
public 

static 
ResultModel 
< 
TData #
># $
Create% +
(+ ,
TData, 1
data2 6
,6 7
bool8 <
isError= D
=E F
falseG L
,L M
stringN T
messageU \
=] ^
default_ f
)f g
=>h j
newk n
(n o
datao s
,s t
isErroru |
,| }
message	~ …
)
… †
;
† ‡
} 